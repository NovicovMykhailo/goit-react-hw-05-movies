{"version":3,"file":"static/js/163.44a03e62.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDescription.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const Error = ({message}) => {\n  return (\n    <div\n      style={{\n        height: '100vh',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n        gap: '20px',\n      }}\n    >\n      <h1>Oops somethin went wrong...</h1>\n      {message && <p>••• {message}•••</p>}\n    </div>\n  );\n};\nexport default Error;\n","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"MovieDetails_poster__Gw9Qy\",\"BG\":\"MovieDetails_BG__uzrsp\",\"posterContainer\":\"MovieDetails_posterContainer__Z1yht\",\"posterLink\":\"MovieDetails_posterLink__NBZGD\",\"posterImage\":\"MovieDetails_posterImage__VZLT9\",\"genres\":\"MovieDetails_genres__80iSK\",\"companies\":\"MovieDetails_companies__aNOk2\",\"companiesLogo\":\"MovieDetails_companiesLogo__XPCAR\",\"locations\":\"MovieDetails_locations__l+FKi\",\"stats\":\"MovieDetails_stats__Xbiuj\",\"overview\":\"MovieDetails_overview__EVogb\",\"topAside\":\"MovieDetails_topAside__2+kTf\",\"bottomAside\":\"MovieDetails_bottomAside__Uvity\",\"buttonContainer\":\"MovieDetails_buttonContainer__IPmkr\",\"Links\":\"MovieDetails_Links__pMviO\",\"linkItem\":\"MovieDetails_linkItem__y+sni\",\"additional\":\"MovieDetails_additional__EaCvI\",\"outletContainer\":\"MovieDetails_outletContainer__S1aQW\",\"goBackBtn\":\"MovieDetails_goBackBtn__EIQ+S\"};","import css from './MovieDetails.module.css';\nimport { DateFormat, ToStringConverter, year } from '../../services/utils';\nimport { Link } from 'react-router-dom';\n\nconst MovieDescription = ({info}) => {\n\n  const {\n    title,\n    genres,\n    poster_path,\n    original_title,\n    homepage,\n    overview,\n    popularity,\n    vote_average,\n    release_date,\n    tagline,\n    production_countries,\n    production_companies,\n  } = info;\n\n  return (\n    <>\n      <div className={css.posterContainer}>\n        <a rel=\"stylesheet\" href={homepage} className={css.posterLink}>\n          <img\n            className={css.posterImage}\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={original_title}\n            loading=\"lazy\"\n            width=\"400\"\n            max-height=\"709\"\n          />\n        </a>\n        <p className={css.locations}>{ToStringConverter(production_countries)}</p>\n      </div>\n      <aside>\n        <div className={css.topAside}>\n          <h2>\n            {title} ( {year(release_date)} )\n          </h2>\n          <p>{tagline}</p>\n\n          <div>\n            <h4>Genres: </h4>\n            <p>{ToStringConverter(genres)}</p>\n          </div>\n\n          <h4>Overview: </h4>\n          <p className={css.overview}>{overview}</p>\n        </div>\n\n        <div className={css.bottomAside}>\n          {production_companies.length >= 1 && (\n            <>\n              <h4>Production Companies:</h4>\n              <ul className={css.companies} data-list>\n                {production_companies.map(({ name, logo_path, origin_country, id }) => {\n                  if (logo_path !== null) {\n                    return (\n                      <li key={id} className=\"company\">\n                        <img\n                          className={css.companiesLogo}\n                          src={`https://image.tmdb.org/t/p/w500/${logo_path}`}\n                          alt={name}\n                          title={`${name}, ${origin_country}`}\n                          loading=\"lazy\"\n                        />\n                      </li>\n                    );\n                  }\n                  return '';\n                })}\n              </ul>\n            </>\n          )}\n          <h4>Statistics: </h4>\n          <ul className={css.stats}>\n            <li>\n              Release Date:\n              <p>{DateFormat(release_date)}</p>\n            </li>\n\n            <li>\n              Vote Average:\n              <p>{Number.parseFloat(vote_average).toFixed(1)}</p>\n            </li>\n\n            <li>\n              User Score:\n              <p>{Number.parseFloat(popularity).toFixed(1)}</p>\n            </li>\n          </ul>\n        </div>\n        <div className={css.additional}>\n          <h3 style={{ textAlign: 'center' }}>Additional Information</h3>\n          <ul className={css.buttonContainer}>\n            <li className={css.Links}>\n              <Link to=\"cast\" className={css.linkItem}>\n                Cast\n              </Link>\n            </li>\n            <li className={css.Links}>\n              <Link to=\"reviews\" className={css.linkItem}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </aside>\n    </>\n  );\n};\n\nexport default MovieDescription;\n","import { Suspense, useEffect, useState } from 'react';\nimport * as API from '../../services/themoviedb_API';\nimport css from './MovieDetails.module.css';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport { useParams, Outlet, Link, useLocation} from 'react-router-dom';\nimport bgPlaceholder from '../../images/poster_bg.jpg';\nimport MovieDescription from './MovieDescription';\n\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [info, setInfo] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n\n  const location = useLocation();\n  const [page, setPage] = useState(() => {\n    return location.state === null ? '/movies' : location.state.from;\n  });\n\n\n  useEffect(() => {\n    (async () => {\n      setStatus('pending');\n      try {\n        await API.getDetails(movieId).then(movie => {\n          setInfo(movie);\n          setStatus('resolved');\n        });\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    })();\n  }, [movieId]);\n\n  useEffect(() => {\n\n    if (location.state !== null) setPage(location.state.from);\n    if (location.state === null) setPage('/');\n  }, [location.state]);\n\n  const bgNormalize = bg => {\n    if (bg === null) return `url( ${bgPlaceholder})`;\n    if (bg) return `url(https://image.tmdb.org/t/p/original/${bg})`;\n  };\n\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'rejected') {\n    return <Error message={error} />;\n  }\n  if (status === 'resolved') {\n    const { backdrop_path } = info;\n\n    return (\n      <>\n        <article className={css.poster}>\n          <Link className={css.goBackBtn} to={page} ></Link>\n          {<div className={css.BG} style={{ backgroundImage: bgNormalize(backdrop_path) }}></div>}\n          <MovieDescription info={info} />\n        </article>\n        <div className={css.outletContainer}>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n        </div>\n      </>\n    );\n  }\n};\nexport default MovieDetails;\n"],"names":["message","style","height","width","display","justifyContent","alignItems","flexDirection","gap","info","title","genres","poster_path","original_title","homepage","overview","popularity","vote_average","release_date","tagline","production_countries","production_companies","className","css","rel","href","src","alt","loading","ToStringConverter","year","length","map","name","logo_path","origin_country","id","DateFormat","Number","parseFloat","toFixed","textAlign","to","movieId","useParams","useState","setInfo","status","setStatus","error","setError","location","useLocation","state","from","page","setPage","useEffect","API","then","movie","bg","Loader","Error","backdrop_path","backgroundImage","bgPlaceholder","Suspense"],"sourceRoot":""}