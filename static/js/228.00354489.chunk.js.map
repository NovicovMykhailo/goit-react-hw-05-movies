{"version":3,"file":"static/js/228.00354489.chunk.js","mappings":"oJAkBA,IAlBc,SAAC,GAAe,IAAdA,EAAa,EAAbA,QACd,OACE,iBACEC,MAAO,CACLC,OAAQ,QACRC,MAAO,OACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,aACZC,cAAe,SACfC,IAAK,QART,WAWE,wBAAI,gCACHR,IAAW,yBAAG,sBAAKA,EAAQ,0BAGjC,C,2KChBD,EAAuB,yBAAvB,EAA6D,+BAA7D,EAAuG,6BAAvG,EAA4I,0BAA5I,EAA8K,0BAA9K,EAAkN,4B,SC4BlN,EA1BmB,SAAC,GAAgB,IAAdS,EAAa,EAAbA,OACZC,EAA6CD,EAA7CC,QAASC,EAAoCF,EAApCE,WAAYC,EAAwBH,EAAxBG,IAAKC,EAAmBJ,EAAnBI,eAC1BC,EAAkCD,EAAlCC,SAAUC,EAAwBF,EAAxBE,YAAaC,EAAWH,EAAXG,OAE5B,OACE,gBAAIC,UAAWC,EAAf,WACE,iBAAKD,UAAWC,EAAhB,WACE,0BAAI,IAAEJ,EAAS,QACf,iBAAKG,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAWC,KAAKC,EAAAA,EAAAA,IAAaL,GAAcM,IAAI,SAASlB,MAAM,QAC9E,gBAAIc,UAAWC,EAAf,WACE,wBAAgB,OAAXF,GAAA,mBAA8BM,EAAAA,EAAAA,IAAcN,OACjD,0BAAI,aAAUO,EAAAA,EAAAA,IAAWZ,gBAI/B,cAAGa,MAAMC,EAAAA,EAAAA,IAAUb,GAAMc,OAAO,QAAhC,UACE,cAAGT,UAAWC,EAAd,SAA4BR,QAQtC,EC3BD,EAA8B,6BAA9B,EAAmE,uBCuDnE,EAhDgB,WACd,OAA8BiB,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAO3B,EAAP,KAAgBgC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,IAfAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,qFACCJ,EAAU,WADX,kBAGSK,EAAAA,GAAeH,GAASI,MAAK,SAAAT,GACjCC,EAAWD,GACXG,EAAU,WACX,IANJ,uDAQGC,EAAW,EAAD,IACVD,EAAU,YATb,wDAAD,EAYD,GAAE,CAACE,IAEW,YAAXH,EAAsB,OAAO,SAACQ,EAAA,EAAD,IACjC,GAAe,aAAXR,EAAuB,OAAO,SAACS,EAAA,EAAD,CAAOvC,QAASA,IAClD,GAAe,aAAX8B,EAAuB,CACzB,GAAgB,OAAZF,GAAuC,IAAnBA,EAAQY,OAC9B,OACE,eAAIvC,MAAO,CAAEwC,MAAO,QAASC,UAAW,SAAUC,UAAW,QAA7D,SAAuE,qDAK3E,GAAIf,EACF,OACE,iCACE,eAAIX,UAAWC,EAAf,SAA0B,aAC1B,SAAC,EAAA0B,SAAD,CAAUC,UAAU,yBAAK,gBAAzB,UACE,eAAI5B,UAAWC,EAAf,SACGU,EAAQkB,KAAI,SAAArC,GACX,OAAO,SAAC,EAAD,CAAYA,OAAQA,GAAaA,EAAOsC,GAChD,UAMZ,CACF,C","sources":["components/Error/Error.jsx","webpack://goit-react-hw-05-movies/./src/components/ReviewCard/ReviewCard.module.css?5507","components/ReviewCard/ReviewCard.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["const Error = ({message}) => {\n  return (\n    <div\n      style={{\n        height: '100vh',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n        gap: '20px',\n      }}\n    >\n      <h1>Oops somethin went wrong...</h1>\n      {message && <p>••• {message}•••</p>}\n    </div>\n  );\n};\nexport default Error;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ReviewCard_card__Hm-SI\",\"userAvatar\":\"ReviewCard_userAvatar__G76FK\",\"userInfo\":\"ReviewCard_userInfo__UJyDf\",\"image\":\"ReviewCard_image__AviTK\",\"stats\":\"ReviewCard_stats__+Zbc0\",\"content\":\"ReviewCard_content__qqmQX\"};","import { DateFormat, formatUrl, ratingConvert, formatAvatar } from '../../services/utils';\nimport css from './ReviewCard.module.css'\n\nconst ReviewCard = ({ review }) => {\n  const { content, created_at, url, author_details } = review;\n  const { username, avatar_path, rating } = author_details;\n\n     return (\n       <li className={css.card}>\n         <div className={css.userAvatar}>\n           <h3> {username} </h3>\n           <div className={css.userInfo}>\n             <img className={css.image} src={formatAvatar(avatar_path)} alt=\"Avatar\" width=\"80\" />\n             <ul className={css.stats}>\n               <li>{rating !== null && `Rating: ${ratingConvert(rating)}`}</li>\n               <li>Created: {DateFormat(created_at)}</li>\n             </ul>\n           </div>\n         </div>\n         <a href={formatUrl(url)} target=\"blank\">\n           <p className={css.content}>{content}</p>\n         </a>\n       </li>\n     );\n\n \n \n   \n};\nexport default ReviewCard;\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"title\":\"Reviews_title__t265C\"};","import { Suspense, useEffect, useState } from 'react';\nimport * as API from '../../services/themoviedb_API';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport ReviewCard from 'components/ReviewCard/ReviewCard';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [message, setMessage] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      setStatus('pending');\n      try {\n        await API.getReviews(movieId).then(reviews => {\n          setReviews(reviews);\n          setStatus('resolved');\n        });\n      } catch (error) {\n        setMessage(error);\n        setStatus('rejected');\n      }\n    })();\n  }, [movieId]);\n\n  if (status === 'pending') return <Loader />;\n  if (status === 'rejected') return <Error message={message} />;\n  if (status === 'resolved') {\n    if (reviews !== null && reviews.length === 0) {\n      return (\n        <h2 style={{ color: 'white', textAlign: 'center', marginTop: '20px' }}>\n          Sorry we can not find any reviews for this movie\n        </h2>\n      );\n    }\n    if (reviews) {\n      return (\n        <>\n          <h3 className={css.title}>Reviews</h3>\n          <Suspense fallback={<div>Loading ...</div>}>\n            <ul className={css.reviewsList}>\n              {reviews.map(review => {\n                return <ReviewCard review={review} key={review.id} />;\n              })}\n            </ul>\n          </Suspense>\n        </>\n      );\n    }\n  }\n};\n\nexport default Reviews;\n"],"names":["message","style","height","width","display","justifyContent","alignItems","flexDirection","gap","review","content","created_at","url","author_details","username","avatar_path","rating","className","css","src","formatAvatar","alt","ratingConvert","DateFormat","href","formatUrl","target","useState","reviews","setReviews","status","setStatus","setMessage","movieId","useParams","useEffect","API","then","Loader","Error","length","color","textAlign","marginTop","Suspense","fallback","map","id"],"sourceRoot":""}