{"version":3,"file":"static/js/27.7a5eafc9.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","webpack://goit-react-hw-05-movies/./src/components/ReviewCard/ReviewCard.module.css?5507","components/ReviewCard/ReviewCard.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/themoviedb_API.js","services/utils.js"],"sourcesContent":["const Error = ({message}) => {\n  return (\n    <div\n      style={{\n        height: '100vh',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n        gap: '20px',\n      }}\n    >\n      <h1>Oops somethin went wrong...</h1>\n      {message && <p>••• {message}•••</p>}\n    </div>\n  );\n};\nexport default Error;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ReviewCard_card__Hm-SI\",\"userAvatar\":\"ReviewCard_userAvatar__G76FK\",\"userInfo\":\"ReviewCard_userInfo__UJyDf\",\"image\":\"ReviewCard_image__AviTK\",\"stats\":\"ReviewCard_stats__+Zbc0\",\"content\":\"ReviewCard_content__qqmQX\"};","import { DateFormat, formatUrl, ratingConvert, formatAvatar } from '../../services/utils';\nimport css from './ReviewCard.module.css'\n\nconst ReviewCard = ({ review }) => {\n  const { content, created_at, url, author_details } = review;\n  const { username, avatar_path, rating } = author_details;\n\n     return (\n       <li className={css.card}>\n         <div className={css.userAvatar}>\n           <h3> {username} </h3>\n           <div className={css.userInfo}>\n             <img className={css.image} src={formatAvatar(avatar_path)} alt=\"Avatar\" width=\"80\" />\n             <ul className={css.stats}>\n               <li>{rating !== null && `Rating: ${ratingConvert(rating)}`}</li>\n               <li>Created: {DateFormat(created_at)}</li>\n             </ul>\n           </div>\n         </div>\n         <a href={formatUrl(url)} target=\"blank\">\n           <p className={css.content}>{content}</p>\n         </a>\n       </li>\n     );\n\n \n \n   \n};\nexport default ReviewCard;\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"title\":\"Reviews_title__t265C\"};","import { Suspense, useEffect, useState } from 'react';\nimport * as API from '../../services/themoviedb_API';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport ReviewCard from 'components/ReviewCard/ReviewCard';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [message, setMessage] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      setStatus('pending');\n      try {\n        await API.getReviews(movieId).then(reviews => {\n          setReviews(reviews);\n          setStatus('resolved');\n        });\n      } catch (error) {\n        setMessage(error);\n        setStatus('rejected');\n      }\n    })();\n  }, [movieId]);\n\n  if (status === 'pending') return <Loader />;\n  if (status === 'rejected') return <Error message={message} />;\n  if (status === 'resolved') {\n    if (reviews !== null && reviews.length === 0) {\n      return (\n        <h2 style={{ color: 'white', textAlign: 'center', marginTop: '20px' }}>\n          Sorry we can not find any reviews for this movie\n        </h2>\n      );\n    }\n    if (reviews) {\n      return (\n        <>\n          <h3 className={css.title}>Reviews</h3>\n          <Suspense fallback={<div>Loading ...</div>}>\n            <ul className={css.reviewsList}>\n              {reviews.map(review => {\n                return <ReviewCard review={review} key={review.id} />;\n              })}\n            </ul>\n          </Suspense>\n        </>\n      );\n    }\n  }\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\n//hedders\nconst API = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    accept: 'application/json',\n    'Accept-Language': 'en-US,en;',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZDcxODI0YzJjM2ZmM2FlZjExOGZjZjJhMWY4NmEwYyIsInN1YiI6IjY0NmM4MTEyMmJjZjY3MDBmZTYyMTZhOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7t2sbFYyvcaDAtE0fXnZqWJkrF8c6YiesSuOdcaSKsk',\n  },\n});\n\n// фильмы в тренде сегодня\nexport async function getTrendingMovies() {\n  try {\n    const response = await API.get(`/trending/movie/day`);\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n//коллекция одноименных фильмов\nexport async function searchMovies(keyword, page = 1) {\n  try {\n    const response = await API.get(\n      `/search/movie?query=${keyword\n        .toLowerCase()\n        .trim()}&include_adult=true&page=${page}`\n    );\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// детали фильма по айди\nexport async function getDetails(ID) {\n  try {\n    const response = await API.get(`/movie/${ID}`);\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n//Актерский состав фильма по айди\nexport async function getMovieActors(ID) {\n  try {\n    const response = await API.get(`/movie/${ID}/credits`);\n      // response.data.cast.map(actor => console.log(actor))\n    return response.data.cast.map(actor =>{return actor});\n  } catch (error) {\n    console.log(error);\n  }\n}\n// обзоры фильма по айди\nexport async function getReviews(ID, page = 1) {\n  try {\n    const response = await API.get(`/movie/${ID}/reviews?page=${page}`);\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { format } from 'date-fns';\nimport placeholder from '../images/placeholder_sq.png'\n\nexport const DateFormat = date => {\n  return format(new Date(date), ' dd MMM yyyy');\n};\n\nexport const year = date => {\n  return format(new Date(date), 'yyyy');\n};\n\nexport const ToStringConverter = obj => {\n  const result = String(obj.map(name => name.name))\n    .split(',')\n    .join(', ');\n  return result;\n};\n\nexport const numToFix = number => {\n  return Number.parseInt(number);\n};\nexport const formatUrl = url => {\n  let arr = Array.from(url);\n  if (arr[0] === '/') {\n    arr.shift();\n  }\n\n  return arr.join('');\n};\n\nexport const ratingConvert = rating => {\n  let I = '';\n  for (let i = 0; i < rating; i += 1) {\n    I += '✯';\n  }\n\n  return I;\n  //  return ` ${rating} ` + I;\n};\n\nexport const formatAvatar = avatar => {\n  if (avatar === null) {\n    return placeholder;\n  }\n\n\n  if (avatar !== null) {\n      let arr = Array.from(avatar);\n      arr.shift();\n    if (arr.length <= 31) {\n      return `https://image.tmdb.org/t/p/w500/${arr.join('')}`;\n    } else {\n      return arr.join('');\n    }\n  }\n\n};\n"],"names":["message","style","height","width","display","justifyContent","alignItems","flexDirection","gap","review","content","created_at","url","author_details","username","avatar_path","rating","className","css","src","formatAvatar","alt","ratingConvert","DateFormat","href","formatUrl","target","useState","reviews","setReviews","status","setStatus","setMessage","movieId","useParams","useEffect","API","then","Loader","Error","length","color","textAlign","marginTop","Suspense","fallback","map","id","axios","baseURL","headers","accept","Authorization","getTrendingMovies","get","response","data","results","console","log","searchMovies","keyword","page","toLowerCase","trim","getDetails","ID","getMovieActors","cast","actor","getReviews","date","format","Date","year","ToStringConverter","obj","String","name","split","join","numToFix","number","Number","parseInt","arr","Array","from","shift","I","i","avatar","placeholder"],"sourceRoot":""}