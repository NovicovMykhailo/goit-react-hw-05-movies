{"version":3,"file":"static/js/437.7125826c.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/CardItem/CardItem.module.css?133d","components/CardItem/CardItem.jsx","components/Error/Error.jsx","webpack://goit-react-hw-05-movies/./src/components/Gallery/Gallery.module.css?dbe6","components/Gallery/Gallery.jsx","pages/Home.jsx","services/themoviedb_API.js","services/utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"CardItem_card__9jGsV\",\"image\":\"CardItem_image__MzQ3z\",\"description\":\"CardItem_description__kNNhM\",\"stats\":\"CardItem_stats__+50T2\",\"overview\":\"CardItem_overview__Y7o1B\"};","import { Link } from 'react-router-dom';\nimport css from './CardItem.module.css';\nimport placeholder from '../../images/200x300placeholder.jpg'\n\nimport { DateFormat, numToFix } from '../../services/utils';\n\nconst CardItem = ({ data, state }) => {\n  const { id, poster_path, title, overview, release_date, popularity } = data;\n  if (poster_path) {\n    return (\n      <li title={title} className={css.card}>\n        <Link to={`/movies/${id}`} state={state}>\n          <div className={css.description}>\n            <ul className={css.stats}>\n              {popularity && <li>Views: {numToFix(popularity)}</li>}\n              {release_date && <li>{DateFormat(release_date)}</li>}\n            </ul>\n          </div>\n          <img\n            className={css.image}\n            src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : placeholder}\n            alt=\"{title}\"\n            loading=\"lazy\"\n          />\n\n          <p className={css.overview}>{overview}</p>\n        </Link>\n      </li>\n    );\n  \n}\n  \n};\n\nexport default CardItem;\n","const Error = ({message}) => {\n  return (\n    <div\n      style={{\n        height: '100vh',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n        gap: '20px',\n      }}\n    >\n      <h1>Oops somethin went wrong...</h1>\n      {message && <p>••• {message}•••</p>}\n    </div>\n  );\n};\nexport default Error;\n","// extracted by mini-css-extract-plugin\nexport default {\"galleryList\":\"Gallery_galleryList__28pGC\"};","import css from './Gallery.module.css';\n\nconst Gallery = ({ children }) => {\n  return <ul className={css.galleryList}>{children}</ul>;\n};\n\nexport default Gallery;\n","import CardItem from 'components/CardItem/CardItem';\nimport { Suspense, useEffect, useState } from 'react';\nimport * as API from '../services/themoviedb_API';\nimport Gallery from 'components/Gallery/Gallery';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport { StyledSection } from 'components/Section/Section';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('ide');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      setStatus('pending');\n      try {\n        await API.getTrendingMovies().then(res => {\n          setMovies(res);\n          setStatus('resolved');\n        });\n      } catch (error) {\n        setStatus('rejected');\n        setError(error);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <Error message={error} />}\n\n      {status === 'resolved' && (\n        <StyledSection title={'Gallery'}>\n          <Gallery>\n            <Suspense >\n              {movies.map(item => (\n                <CardItem data={item} key={item.id} state={{ from: '/' }} />\n              ))}\n            </Suspense>\n          </Gallery>\n        </StyledSection>\n      )}\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\n//hedders\nconst API = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    accept: 'application/json',\n    'Accept-Language': 'en-US,en;',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZDcxODI0YzJjM2ZmM2FlZjExOGZjZjJhMWY4NmEwYyIsInN1YiI6IjY0NmM4MTEyMmJjZjY3MDBmZTYyMTZhOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7t2sbFYyvcaDAtE0fXnZqWJkrF8c6YiesSuOdcaSKsk',\n  },\n});\n\n// фильмы в тренде сегодня\nexport async function getTrendingMovies() {\n  try {\n    const response = await API.get(`/trending/movie/day`);\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n//коллекция одноименных фильмов\nexport async function searchMovies(keyword, page = 1) {\n  try {\n    const response = await API.get(\n      `/search/movie?query=${keyword\n        .toLowerCase()\n        .trim()}&include_adult=true&page=${page}`\n    );\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// детали фильма по айди\nexport async function getDetails(ID) {\n  try {\n    const response = await API.get(`/movie/${ID}`);\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n//Актерский состав фильма по айди\nexport async function getMovieActors(ID) {\n  try {\n    const response = await API.get(`/movie/${ID}/credits`);\n      // response.data.cast.map(actor => console.log(actor))\n    return response.data.cast.map(actor =>{return actor});\n  } catch (error) {\n    console.log(error);\n  }\n}\n// обзоры фильма по айди\nexport async function getReviews(ID, page = 1) {\n  try {\n    const response = await API.get(`/movie/${ID}/reviews?page=${page}`);\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n//информация про актера\nexport async function getActorsInfo(ID) {\n  try {\n    const response = await API.get(`/person/${ID}`);\n    // console.log(response.data);\n    return response.data\n  } catch (error) {\n    console.log(error);\n  }\n}\n//информация про его фильмы актера\nexport async function getMoviesCredits(ID) {\n  try {\n    const response = await API.get(`/person/${ID}/movie_credits`);\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}","import { format } from 'date-fns';\nimport placeholder from '../images/placeholder_sq.png';\n\nexport const DateFormat = date => {\n  return format(new Date(date), ' dd MMM yyyy');\n};\n\nexport const year = date => {\n  return format(new Date(date), 'yyyy');\n};\n\nexport const ToStringConverter = obj => {\n  const result = String(obj.map(name => name.name))\n    .split(',')\n    .join(', ');\n  return result;\n};\n\nexport const numToFix = number => {\n  return Number.parseInt(number);\n};\n\nexport const formatUrl = url => {\n  let arr = Array.from(url);\n  if (arr[0] === '/') {\n    arr.shift();\n  }\n\n  return arr.join('');\n};\n\nexport const ratingConvert = rating => {\n  let I = '';\n  for (let i = 0; i < rating; i += 1) {\n    I += '✯';\n  }\n\n  return I;\n  //  return ` ${rating} ` + I;\n};\n\nexport const formatAvatar = avatar => {\n  if (avatar === null) {\n    return placeholder;\n  }\n\n  if (avatar !== null) {\n    let arr = Array.from(avatar);\n    arr.shift();\n    if (arr.length <= 31) {\n      return `https://image.tmdb.org/t/p/w500/${arr.join('')}`;\n    } else {\n      return arr.join('');\n    }\n  }\n};\n\nexport const formatImage = avatar => {\n  if (avatar === null) {\n    return placeholder;\n  }\n\n  if (avatar !== null) {\n    return `https://image.tmdb.org/t/p/w500/${avatar}`;\n  }\n};\n\nexport const filteredAray = (array) => {\n  let reg = /[^a-zA-Z\\s]+/;\n\n  const filtered = array.filter(i => !i.match(reg));\n  const object = { ...filtered };\n\n  return String(Object.values(object)).split(',').join(', ');\n};\n"],"names":["data","state","id","poster_path","title","overview","release_date","popularity","className","css","to","numToFix","DateFormat","src","alt","loading","message","style","height","width","display","justifyContent","alignItems","flexDirection","gap","children","useState","movies","setMovies","status","setStatus","error","setError","useEffect","API","then","res","StyledSection","Suspense","map","item","from","axios","baseURL","headers","accept","Authorization","getTrendingMovies","get","response","results","console","log","searchMovies","keyword","page","toLowerCase","trim","getDetails","ID","getMovieActors","cast","actor","getReviews","getActorsInfo","getMoviesCredits","date","format","Date","year","ToStringConverter","obj","String","name","split","join","number","Number","parseInt","formatUrl","url","arr","Array","shift","ratingConvert","rating","I","i","formatAvatar","avatar","placeholder","length","formatImage","filteredAray","array","reg","filtered","filter","match","object","Object","values"],"sourceRoot":""}